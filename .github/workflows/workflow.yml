name: CI

on:
  pull_request:
    branches: [test]

jobs:
  connect-remote:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.DATABASE }}
          MYSQL_ROOT_HOST: "%"
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18
      - name: create and configure
        run: |
            touch .env
            echo port=${{ secrets.PORT }} >> .env
            echo host=${{ secrets.HOST }} >> .env
            echo dialect=${{ secrets.DIALECT }} >> .env
            echo user=${{ secrets.USER }} >> .env
            echo password=${{ secrets.PASSWORD }}>> .env
            echo database=${{ secrets.DATABASE }} >> .env

      - name: Install dependencies
        run: npm i

      - name: Run tests
        run: npm test

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Pull MySQL Docker image
#         run: docker pull mysql:latest

#       - name: Start MySQL Service
#         run: docker run --name mysql -e MYSQL_ROOT_PASSWORD=Jay@1998 -e MYSQL_DATABASE=healthCheck -e MYSQL_USER=root -d -p 3306:8000 mysql:latest
#       - run: sleep 10
#       - uses: actions/checkout@v3

#       - name: Use Node.js
#         uses: actions/setup-node@v2
#         with:
#           node-version: 20.7.0

#       - run: ls -l    
#       - run: npm install
#       - run: npm run test
